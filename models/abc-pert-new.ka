%def: "deltaActivitiesFileName" "activities.json"

/* Signatures */
%agent: A(x,c) // Declaration of agent A
%agent: B(x) // Declaration of B
%agent: C(x1{u p},x2{u p}) // Declaration of C with 2 modifiable sites

/* Rules */
'a.b' A(x[.]),B(x[.]) -> A(x[1]),B(x[1]) @ 'on_rate' //A binds B
'a..b' A(x[1/.]),B(x[1/.]) @ 'off_rate' //AB dissociation

'ab.c' A(x[_],c[.]),C(x1{u}[.]) ->A(x[_],c[2]),C(x1{u}[2])
       @ 'on_rate' //AB binds unphosphorilated C
'mod x1' C(x1{u}[1]),A(c[1]) ->C(x1[.]{p}),A(c[.]) @ 'mod_rate' //ABC modifies x1, and AC dissociation
'a.c' A(x[.],c[.]),C(x1{p}[.],x2[.]{u}) ->
      A(x[.],c[1]),C(x1{p}[.],x2[1]{u}) @ 'on_rate' //A binds x1_phos C on x2
'mod x2' A(x[.],c[1]),C(x1{p},x2{u}[1]) ->
         A(x[.],c[.]),C(x1{p},x2{p}[.]) @ 'mod_rate' //AC modifies x2, and AC dissociation

/* Variables */
%var: 'on_rate' 1.0E-4 // per molecule per second
%var: 'off_rate' 0.1 // per second
%var: 'mod_rate' 1 // per second
%obs: 'AB' |A(x[x.B])|
%obs: 'Cuu' |C(x1{u},x2{u})|
%obs: 'Cpu' |C(x1{p},x2{u})|
%obs: 'Cpp' |C(x1{p},x2{p})|

%var: 'n_ab' 1000
%var: 'n_c' 10000
//%var: 'C' |C()|

/* Initial conditions */
%init: 'n_ab' A(),B()
%init: 'n_c' C()
//%mod: [true] do $FLUX "flux.dot" [true]
//%mod: alarm 10.0 do $ADD 10000 C();
